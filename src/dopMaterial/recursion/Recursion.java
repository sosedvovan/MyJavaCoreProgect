package dopMaterial.recursion;

//рекурсия- это когда метод вызывает сам себя
public class Recursion {
    private static char[] alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',
            'n', 'o', 'p', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};//размер массива = 25 (индексы от 0 до 24)

    public static void main(String[] args) {
        //запускаем метод с последнего элемента(length - 1)
        printArray(alphabet.length - 1);
    }//закрыли главный метод

    private static void printArray(final int index) {
        System.out.println("мы запустили метод printArray с индексом: " + index);//мы запустили метод printArray с индексом: 24

        //обязательное условие завершения рекурсии:
        if (index < 0) {//когда сюда прийдет -1  сработает return
            return;
        }else {
        //далее идет рекурсивный вызов:
        //создается стек методов, в этом стеке-
        //-создается новый(второй) фрейм метода, у которого index  на 1 меньше(23) и управление программы внутри него,
        //и метод еще раз выводит: ---System.out.println("мы запустили метод printArray с индексом: " + index);//...23---
        //пока не дойдем до 26-ого фрейма с index == -1 и тут сработает в условии return и метод завершит работу
        //при этом стек фреймов начинает сворачиватся и управление переходит к } в строке  ---printArray(index - 1);}---
        //предпоследнего фрейма в которм index = 0 и следовательно выполняется следующая строка
        // --- System.out.println(alphabet[index]);-----  и выводится
        //первый элемент массива, далее завершает работу пред-пред последний фрейм с index = 1 и выводит 2-й элемент массива
        //и так пока весь стек этих фреймов закроется- выведется весь массив.
        printArray(index - 1);}

        System.out.println(alphabet[index]);


    }
}
