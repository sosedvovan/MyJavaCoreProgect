package javaCore34.lambdas.sample4;

//Лямбда функция объявленная в методе:
//В случае если лямбда функция используется в обычном методе, то из лямбда
//функции есть доступ ко всем членам объемлющего класса. При использовании лямбда
//функции в статическом методе доступ будет только к статическим членам объемлющего класса.

//В методе в котором объявлена лямбда функция, доступ имеется к final и effective-final локальным переменным метода.

public class Main {

    public static void main(String[] args) {

        //ссылке типа интерфейс Summator smg присваивается ссылка типа интерфейс Summator sm, которую вернул метод getIntegerSummator()
        //и которая в этом методе получила реализацию абстракта функц. интерфейса
        Summator smg = getIntegerSummator(new int[]{1, 2, 3});

        System.out.println(smg.getSum());
    }

    public static Summator getIntegerSummator(int[] array) {
            //final и effective-final этого метода будут доступны внутри лямбды

        //тк лямбда находится в статическо методе, то доступ у нее есть к статическим членам класса
        Summator sm = () -> {
            int sum = 0;
            for (int i = 0; i < array.length; i++) {
                sum += array[i];//Доступ к локальному параметру пришедшему в аргументы метода
            }
            return sum;
        };

        return sm;
    }
}

/**
 * Ограничения лямбда функций:
 *
 * 1)Нельзя объявлять статические переменные, классы кроме констант (static final)
 * 2)Нельзя объявить интерфейс
 * 3)Нельзя объявить перечисление
 */
