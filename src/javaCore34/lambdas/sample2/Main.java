package javaCore34.lambdas.sample2;

//Использование:
public class Main {

    public static void main(String[] args) {

        //создаем объект класса SimpleClass используя его конструктор, принимающий массив интов:
        SimpleClass a = new SimpleClass(new int[]{1, 2, 3});

        //следующий объект класса SimpleClass b, может нести в себе другой интовый массив.

        //объект класса SimpleClass a - обращается к своему методу-геттору, на выходе у которого ссылка на функциональный интерфейс
        //с уже реализованным абстрактом и сразу присваеваем ее к Summator sm
        Summator sm = a.getSummatorInstance();//получили ссылку типа интерфейс через геттер, тк поле private

        //чз ссылку типа интерфейс sm запустили анонимномый методу интерфейса, кот. в свою очередь запустил свою
        //реализацию (соотнесенную именно и только с сылкой sm)  в лямбде в поле класса SimpleClass
        //другая ссылка может нести другую реализацию абстрактного метода.
        System.out.println(sm.getSum());//6

        //то, чтобы отработала реализация абстрактного метода в лямде, надо получить ссылку типа интерфейс на этот интерфейс
        //и через эту ссылку запустить абстрактный метод, кот. в свою очередь запустит свою реализацию в лямбде.

        //ссылка типа интерфейс соотносится с конкретной реализацией абстрактного метода в лямбде.
        //следовательно другую ссылку можно соотнести с другой реализацией абстрактного метода в лямбде.
    }
}
