package javaCore34.supplier.sample1;

import java.util.function.Supplier;

//Функциональный интерфейс Supplier
public class Main {

    public static void main(String[] args) {
        //Supplier получает реализацию с пом создания объкта класса, его реализующего
        //отправляя в конструктор инты
        Supplier<Integer> counter = new IntegerSequince(0, 10, 1);
        //заведем переменную для цикла
        Integer number;
        //Использование метода интерфейса. пока релизация абстракта get() не вернет нуль, будет выполняться этот цикл
        //get возвращает нулль или цифру-Интеджер
        for (; (number = counter.get()) != null;) {//запускаем релизацию абстракта get() в цикле
            System.out.println(number);//печать в цикле
        }
    }
}

//Реализация Supplier с помощью класса
class IntegerSequince implements Supplier<Integer> {
    //поля, которые потребуются для реализации логики при реализации абстракта функционального интерфейса
    private Integer start;
    private Integer end;
    private Integer step;
    //конструктор
    public IntegerSequince(Integer start, Integer end, Integer step) {
        this.start = start;
        this.end = end;
        this.step = step;
    }
    //метод, реализующий абстракт get интерфейса Supplier (делает Интеджеры от 1 до 10 с шагом 1)
    //логика метода состоит в проверке условия и итерации "счетчика" на заданный шаг
    //те абстракт интерфейса Supplier - ЭТО ГЕНЕРАТОР ОБЪЕКТОВ
    @Override
    public Integer get() {
        //проверка- не превысило ли стартовое значение канечное
        if (start > end)//возвращаем null, если стартовое значение > конечного
            return null;
        start += step;//итерирует
        return (start - step);//возвращает цифру(то мы создали объект Интеджер)
    }
}


/**
 * Supplier<T> - функциональный интерфейс появившийся в Java 8. Используется для
 * создания объектов нужного типа без использования входных параметров. Очень часто
 * используются в терминальных методах Stream API. Для работы необходимо
 * импортировать пакет java.util.javaCore34.function.Supplier.
 *
 *          писок методов интерфейса Supplier<T>:
 *
 *  Метод                          Описание
 * T get()       Создает объект типа T и возвращает ссылку на него
 *
 *               Абстрактный метод интерфейса Supplier:
 *
 * Так как Supplier функциональный интерфейс, то обязательным к реализации должен
 * быть только один метод. В данном интерфейсе это метод T get(). Его реализация должна
 * вернуть ссылку Т типа на объект. Объект может быть как создан раньше, так и создан при
 * вызове данного метода. Так, как интерфейс функциональный то наряду с обычной
 * реализацией может быть использована реализация с помощью ссылки на метод и лямбда
 * функции.
 */
